[ :sympy-expression "sqrt(-1)"; :sympy-evaluation "I"].
[ :sympy-expression "E**(I*pi) + 1"; :sympy-evaluation "0"].

[ :sympy-expression "fft([0, 1, 2, 3, 4, 5, 6, 7])"; :sympy-evaluation "[28, -4 - 4*sqrt(2)*I - 4*I, -4 - 4*I, -4 - 4*sqrt(2)*I + 4*I, -4, -4 - 4*I + 4*sqrt(2)*I, -4 + 4*I, -4 + 4*I + 4*sqrt(2)*I]"].
[ :sympy-expression "fft([0, 1, 2, 3, 0, 1, 2, 3])"; :sympy-evaluation "[12, 0, -4 - 4*I, 0, -4, 0, -4 + 4*I, 0]"].
[ :sympy-expression "fft([0, 1, 0, 1, 0, 1, 0, 1])"; :sympy-evaluation "[4, 0, 0, 0, -4, 0, 0, 0]"].
[ :sympy-expression "fft([0, 0, 0, 0, 0, 0, 0, 0])"; :sympy-evaluation "[0, 0, 0, 0, 0, 0, 0, 0]"].

[ :sympy-expression "fibonacci(0)"; :sympy-evaluation "0"].
[ :sympy-expression "fibonacci(1)"; :sympy-evaluation "1"].
[ :sympy-expression "fibonacci(6)"; :sympy-evaluation "8"].
[ :sympy-expression "fibonacci(91)"; :sympy-evaluation "4660046610375530309"].
[ :sympy-expression "fibonacci(283)"; :sympy-evaluation "62232491515607091882574410635924603070626544377175485625797"].
[ :sympy-expression "fibonacci(3674)"; :sympy-evaluation "295872959797101479478634366815157108100573212705250690577871041398423606408217262643449728342664061812585639168722421830407677671667740585806703531229882783069925750619720511808616484846128237251921414441458265138672827487722512845223115526738192067144721087756159352711138340620702266509343657403678256247195010013499661223527119909308682062873140767135468966093474944529418214755911968500799987099146489838560114063096775586903976827512299123202488315139397181279903459556726060805948910609527571241968534269554079076649680403030083743420820438603816095671532163428933363322524736324029745871445486444623006627119156710782085648303485296149604974010598940800770684835758031137479033374229914629583184427269638360355586190323578625395157899987377625662075558684705457"].

[ :sympy-expression "list(GrayCode(2).generate_gray())"; :sympy-evaluation "['00', '01', '11', '10']"].
[ :sympy-expression "list(GrayCode(3).generate_gray())"; :sympy-evaluation "['000', '001', '011', '010', '110', '111', '101', '100']"].
[ :sympy-expression "list(GrayCode(4).generate_gray())"; :sympy-evaluation "['0000', '0001', '0011', '0010', '0110', '0111', '0101', '0100', '1100', '1101', '1111', '1110', '1010', '1011', '1001', '1000']"].

[ :sympy-expression "qapply(OracleGate(2, lambda qubits: qubits == IntQubit(2))*IntQubit(2))"; :sympy-evaluation "-|2>"].
[ :sympy-expression "qapply(OracleGate(2, lambda qubits: qubits == IntQubit(2))*IntQubit(3))"; :sympy-evaluation "|3>"].
[ :sympy-expression "qapply(grover_iteration(superposition_basis(2), OracleGate(2, lambda qubits: qubits == IntQubit(2))))"; :sympy-evaluation "|2>"].
[ :sympy-expression "qapply(grover_iteration(superposition_basis(4), OracleGate(4, lambda qubits: qubits == IntQubit(2))))"; :sympy-evaluation "|0>/4 + |1>/4 + |2>/4 + |3>/4 + |4>/4 + |5>/4 + |6>/4 + |7>/4 + |8>/4 + |9>/4 + |10>/4 + |11>/4 + |12>/4 + |13>/4 + |14>/4 + |15>/4"].

[ :sympy-expression "integrate(exp(-x**2), (x, -oo, oo))"; :sympy-evaluation "sqrt(pi)"].
[ :sympy-expression "integrate(1/(1+x**2), (x, -oo, oo))"; :sympy-evaluation "pi"].

[ :sympy-expression "limit(sin(x)/x, x, oo)"; :sympy-evaluation "0"].
[ :sympy-expression "limit(1/x, x, 0)"; :sympy-evaluation "oo"].
[ :sympy-expression "limit(1/x, x, 0, dir='-')"; :sympy-evaluation "-oo"].

[ :sympy-expression "N(pi, 10)"; :sympy-evaluation "3.141592654"].
[ :sympy-expression "N(pi, 50)"; :sympy-evaluation "3.1415926535897932384626433832795028841971693993751"].
[ :sympy-expression "N(pi, 246)"; :sympy-evaluation "3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196442881097566593344612847564823378678316527120"].

[ :sympy-expression "Polygon((0, 0), (2, 0), (0, 1), (0, 0)).area"; :sympy-evaluation "1"].
[ :sympy-expression "Polygon((3, 2), (6, 2), (7, 6), (4, 6), (5, 5), (5, 3), (3, 2)).area"; :sympy-evaluation "15/2"].

[ :sympy-expression "solve(x-2, x)"; :sympy-evaluation "[2]"].
[ :sympy-expression "solve(x**4-10*x**3+35*x**2-50*x+24, x)"; :sympy-evaluation "[1, 2, 3, 4]"].
[ :sympy-expression "solve(x**4+(-9-5*I)*x**3+(14+33*I)*x**2+(24-44*I)*x-26, x)"; :sympy-evaluation "[I, 1 + I, 3 + 2*I, 5 + I]"].
[ :sympy-expression "solve_poly_system([x*y - 2*y, 2*y**2 - x**2], x, y)"; :sympy-evaluation "[(0, 0), (2, -sqrt(2)), (2, sqrt(2))]"].

[ :sympy-expression "list(primerange(0, 100))"; :sympy-evaluation "[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]"].
[ :sympy-expression "list(primerange(1000000, 1000100))"; :sympy-evaluation "[1000003, 1000033, 1000037, 1000039, 1000081, 1000099]"].
[ :sympy-expression "isprime(6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151)"; :sympy-evaluation "True"].
[ :sympy-expression "nextprime(6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151)"; :sympy-evaluation "6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115058039"].

[ :sympy-expression "totient(271)"; :sympy-evaluation "270"].
[ :sympy-expression "totient(2718281)"; :sympy-evaluation "2718280"].
[ :sympy-expression "totient(27182818284)"; :sympy-evaluation "8994800640"].
[ :sympy-expression "totient(271828182845904)"; :sympy-evaluation "87459116512768"].

