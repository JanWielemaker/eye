_:bn_1 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "sqrt(2) = 1.414213562373095".
_:bn_2 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "sqrt(81) = 9.0".
_:bn_3 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "sqrt(62232491515607091882574410635924603070626544377175485625797) = 6.0773917495710050666576572886645120186158734743335435522775390625e+55".
_:bn_4 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "sqrt(-1 + 0im) = 0.0 + 1.0im".
_:bn_5 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "exp(Ï€ * im) + 1 = 0.0 + 1.2246467991473532e-16im".
_:bn_6 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "sin(im) = 0.0 + 1.1752011936438014im".
_:bn_7 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "acos(2 + 0im) = 0.0 - 1.3169578969248166im".
_:bn_8 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "asin(2 + 0im) = 1.5707963267948966 + 1.3169578969248166im".
_:bn_9 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "atan(1 + 2im) = 1.3389725222944935 + 0.40235947810852507im".
_:bn_10 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "log(-1 + 0im) = 0.0 + 3.141592653589793im".
_:bn_11 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "log(-im) = 0.0 - 1.5707963267948966im".
_:bn_12 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "Symbolics.derivative(x + x ^ 2, x) = 1 + 2x".
_:bn_13 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "Symbolics.derivative((x + 2 * x ^ 2 + 6 * x ^ 3) - 5 * x ^ 4, x) = 1 + 4x + 18(x^2) - 20(x^3)".
_:bn_14 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "Symbolics.derivative(cos(x) * sin(x), x) = cos(x)^2 - (sin(x)^2)".
_:bn_15 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "Symbolics.derivative(exp(x), x) = exp(x)".
_:bn_16 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "Symbolics.derivative(log(x), x) = x^-1".
_:bn_17 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "Symbolics.jacobian([x + x * y, x ^ 4 + y], [x, y]) = Num[1 + y x; 4(x^3) 1]".
_:bn_18 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "Symbolics.hessian(x ^ 4 + z, [x, y, z]) = Num[12(x^2) 0 0; 0 0 0; 0 0 0]".
_:bn_19 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "resolve(#= /home/jdroo/github.com/josd/eye/retina/julia/dt.jl:30012 =# @julog(n10(ELEMENT)), clauses) = (true, Any[{ELEMENT => z}])".
_:bn_20 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "resolve(#= /home/jdroo/github.com/josd/eye/retina/julia/dt.jl:30013 =# @julog(n100(ELEMENT)), clauses) = (true, Any[{ELEMENT => z}])".
_:bn_21 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "resolve(#= /home/jdroo/github.com/josd/eye/retina/julia/dt.jl:30014 =# @julog(n1000(ELEMENT)), clauses) = (true, Any[{ELEMENT => z}])".
_:bn_22 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "resolve(#= /home/jdroo/github.com/josd/eye/retina/julia/dt.jl:30015 =# @julog(n10000(ELEMENT)), clauses) = (true, Any[{ELEMENT => z}])".
_:bn_23 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "fibonacci(0) = 0".
_:bn_24 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "fibonacci(1) = 1".
_:bn_25 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "fibonacci(6) = 8".
_:bn_26 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "fibonacci(91) = 4660046610375530309".
_:bn_27 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "fibonacci(big(283)) = 62232491515607091882574410635924603070626544377175485625797".
_:bn_28 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "fibonacci(big(3674)) = 295872959797101479478634366815157108100573212705250690577871041398423606408217262643449728342664061812585639168722421830407677671667740585806703531229882783069925750619720511808616484846128237251921414441458265138672827487722512845223115526738192067144721087756159352711138340620702266509343657403678256247195010013499661223527119909308682062873140767135468966093474944529418214755911968500799987099146489838560114063096775586903976827512299123202488315139397181279903459556726060805948910609527571241968534269554079076649680403030083743420820438603816095671532163428933363322524736324029745871445486444623006627119156710782085648303485296149604974010598940800770684835758031137479033374229914629583184427269638360355586190323578625395157899987377625662075558684705457".
_:bn_29 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "resolve(#= /home/jdroo/github.com/josd/eye/retina/julia/graph.jl:22 =# @julog(path(X, angers)), clauses) = (true, Any[{X => lemans}, {X => chartres}, {X => paris}])".
_:bn_30 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "resolve(#= /home/jdroo/github.com/josd/eye/retina/julia/graph.jl:23 =# @julog(path(angers, X)), clauses) = (true, Any[{X => nantes}])".
_:bn_31 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "resolve(#= /home/jdroo/github.com/josd/eye/retina/julia/graph.jl:24 =# @julog(path(paris, nantes)), clauses) = (true, Any[{}])".
_:bn_32 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "hanoi(4, 1, 2, 3) = true".
_:bn_33 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "hanoi(24, 1, 2, 3) = true".
_:bn_34 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "inv([1 2 3; 4 1 6; 7 8 1]) = [-0.4519230769230769 0.21153846153846154 0.08653846153846154; 0.3653846153846154 -0.19230769230769232 0.05769230769230769; 0.24038461538461536 0.057692307692307696 -0.0673076923076923]".
_:bn_35 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "det([1 2 3; 4 1 6; 7 8 1]) = 104.0".
_:bn_36 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "eigvals([-4.0 -17.0; 2.0 2.0]) = ComplexF64[-1.0000000000000002 - 5.000000000000001im, -1.0000000000000002 + 5.000000000000001im]".
_:bn_37 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "eigvecs([-4.0 -17.0; 2.0 2.0]) = ComplexF64[0.9459053029269173 - 0.0im 0.9459053029269173 + 0.0im; -0.16692446522239715 + 0.2782074420373287im -0.16692446522239715 - 0.2782074420373287im]".
_:bn_38 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "factorize([1.5 2 -4; 3 -1 -6; -10 2.3 4]) = LU{Float64, Matrix{Float64}}([-10.0 2.3 4.0; -0.15000000000000002 2.345 -3.4; -0.30000000000000004 -0.1321961620469083 -5.249466950959488], Int32[3, 3, 3], 0)".
_:bn_39 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "factorize([1.5 2 -4; 2 -1 -3; -4 -3 5]) = BunchKaufman{Float64, Matrix{Float64}}([-1.642857142857143 0.14285714285714296 -0.8; 2.0 -2.8000000000000003 -0.6000000000000001; -4.0 -3.0 5.0], Int32[1, 2, 3], 'U', true, false, 0)".
_:bn_40 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "[1 0; 1 -2] \\ [32; -4] = [32.0, 18.0]".
_:bn_41 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "[1 0; 1 -2] * [32.0, 18.0] = [32.0, -4.0]".
_:bn_42 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "dot([1; 1], [2; 3]) = 5".
_:bn_43 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "cross([0; 1; 0], [0; 0; 1]) = [1, 0, 0]".
_:bn_44 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "UpperHessenberg([1 2 3 4; 5 6 7 8; 9 10 11 12; 13 14 15 16]) = [1 2 3 4; 5 6 7 8; 0 10 11 12; 0 0 15 16]".
_:bn_45 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "(cholesky([4.0 12.0 -16.0; 12.0 37.0 -43.0; -16.0 -43.0 98.0])).U = [2.0 6.0 -8.0; 0.0 1.0 5.0; 0.0 0.0 3.0]".
_:bn_46 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "(cholesky([4.0 12.0 -16.0; 12.0 37.0 -43.0; -16.0 -43.0 98.0])).L = [2.0 0.0 0.0; 6.0 1.0 0.0; -8.0 5.0 3.0]".
_:bn_47 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "padovan(1) = 1".
_:bn_48 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "padovan(2) = 1".
_:bn_49 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "padovan(3) = 1".
_:bn_50 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "padovan(4) = 2".
_:bn_51 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "padovan(5) = 2".
_:bn_52 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "padovan(6) = 3".
_:bn_53 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "padovan(7) = 4".
_:bn_54 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "padovan(8) = 5".
_:bn_55 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "padovan(9) = 7".
_:bn_56 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "padovan(10) = 9".
_:bn_57 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "padovan(91) = 70748973084".
_:bn_58 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "padovan(big(283)) = 19834325738278984504790864536272129".
_:bn_59 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "padovan(big(3674)) = 26178594930998300129122144750852069608549403205774929555079079707081575465552356148508452550483580612948221886219497991654772054359076809450166551553886580037212540081075958680409828886869538010195558848488217299128261230125392693494793565831379519817637833179199806547822062027975157112247040373170650000852653450124493609094492793737517355809497791251385318177510845806782564433990788816833563231575956567960805822051433568191271295650424612344171".
_:bn_60 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "roots(Polynomial([24 + 7im, -50, 35, -10, 1])) = ComplexF64[0.6352976779615935 + 0.4671733246057252im, 1.7445177980581148 - 1.1530902792250133im, 3.255482201941885 + 1.1530902792250153im, 4.364702322038404 - 0.46717332460572836im]".
_:bn_61 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "roots(Polynomial([-26, 24 - 44im, 14 + 33im, -9 - 5im, 1])) = ComplexF64[2.4536528394633677e-16 + 1.0im, 0.9999999999999992 + 0.9999999999999999im, 3.000000000000007 + 2.0000000000000053im, 4.9999999999999964 + 0.9999999999999982im]".
_:bn_62 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "primes(0, 100) = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]".
_:bn_63 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "primes(1000000, 1000100) = [1000003, 1000033, 1000037, 1000039, 1000081, 1000099]".
_:bn_64 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "isprime(6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151) = true".
_:bn_65 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "nextprime(6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151) = 6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151".
_:bn_66 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "totient(271) = 270".
_:bn_67 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "totient(2718281) = 2718280".
_:bn_68 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "totient(27182818284) = 8994800640".
_:bn_69 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "totient(271828182845904) = 87459116512768".
_:bn_70 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "totient(2718281828459045235360287471352662497757247) = 1811056085631168661171087103167285546745856".
_:bn_71 <http://josd.github.io/eye/reasoning/julia/julia-result.n3#julia-answer> "resolve(#= /home/jdroo/github.com/josd/eye/retina/julia/zebra.jl:45 =# @julog(query(Houses)), clauses) = (true, Any[{Houses => [house(yellow, norwegian, fox, water, kools), house(blue, ukrainian, horse, tea, chesterfields), house(red, english, snails, milk, winstons), house(ivory, spanish, dog, orange_juice, lucky_strikes), house(green, japanese, zebra, coffee, parliaments)]}])".

